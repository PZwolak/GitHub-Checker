/*! GitHub checker v0.0.1 | (c) 2019 Patryk Zwolak | MIT License | https://github.com/PZwolak/GitHub-Checker */
const findUserBtn=document.querySelector(".main-type-button"),findUserInp=document.querySelector("#inp"),resultUserName=document.querySelector(".git-checker__main-result-user-name"),resultUserNick=document.querySelector(".git-checker__main-result-user-nick"),resultUserRepoQuantity=document.querySelector(".git-checker__main-result-user-repo-quantity"),resultRepos=document.querySelector(".git-checker__main-result-repos"),pagContainer=document.querySelector(".git-checker__main-result-pagination"),client_id="Iv1.268cfe02718c9950",client_secret="233cbfa1d72224313bde475febd35a3daeaf3db7",searchUsers=async e=>{const s=await fetch(`https://api.github.com/users/${e}?client_id=${client_id}&client_secret=${client_secret}`);return await s.json()},searchRepo=async(e,s=1)=>{const t=await fetch(`https://api.github.com/users/${e}/repos?client_id=${client_id}&client_secret=${client_secret}&page=${s}`);return await t.json()},createUserAnimation=()=>{resultUserName.classList.add("disabled"),resultUserNick.classList.add("disabled"),resultUserRepoQuantity.classList.add("disabled"),setTimeout(function(){resultUserName.classList.remove("disabled")},100),setTimeout(function(){resultUserNick.classList.remove("disabled")},200),setTimeout(function(){resultUserRepoQuantity.classList.remove("disabled")},300)},createUser=e=>{resultUserName.classList.add("disabled"),resultUserNick.classList.add("disabled"),resultUserRepoQuantity.classList.add("disabled"),setTimeout(function(){resultUserName.classList.remove("disabled")},100),setTimeout(function(){resultUserNick.classList.remove("disabled")},200),setTimeout(function(){resultUserRepoQuantity.classList.remove("disabled")},300),resultUserName.innerHTML=`<p>name: <span>${e.name}</span></p>`,resultUserNick.innerHTML=`<p>login: <span>${e.login}</span></p>`,resultUserRepoQuantity.innerHTML=`<p>Repos: <span>${e.public_repos}</span></p>`},createRepoAnimation=()=>{resultRepos.classList.add("disabled"),setTimeout(function(){resultRepos.classList.remove("disabled")},400)},createRepo=e=>{resultRepos.classList.add("disabled"),setTimeout(function(){resultRepos.classList.remove("disabled")},400);const s=document.createElement("div");resultRepos.innerHTML="",s.classList.add("git-checker__main-result-repos-title"),s.innerHTML="<p>Repos: </p>",resultRepos.appendChild(s),e.map(e=>{resultRepos.innerHTML+=`<div class="container">\n            <div class="git-checker__main-result-repos-element row">\n            <div class="git-checker__main-result-repos-element-name col-12 col-md-2"><p><span>${e.name}</span></p></div>\n            <div class="git-checker__main-result-repos-element-id col-6 col-sm-4 col-md-2"><p><span class="icon id"></span>ID: <span>${e.id}</span></p></div>\n            <div class="git-checker__main-result-repos-element-access col-6 col-sm-4 col-md-2"><p><span class="icon private"></span>Private: <span>${e.private}</span></p></div>\n            <div class="git-checker__main-result-repos-element-stars col-6 col-sm-4 col-md-2"><p><span class="icon stars"></span>Stars: <span>${e.stargazers_count}</span></p></div>\n            <div class="git-checker__main-result-repos-element-forks col-6 col-sm-4 col-md-2"><p><span class="icon forks"></span>Forks: <span>${e.forks_count}</span></p></div>\n            <div class="git-checker__main-result-repos-element-watchers col-6 col-sm-4 col-md-2"><p><span class="icon watchers"></span>Watchers <span>${e.watchers}</span></p></div>\n            </div>\n            </div>\n            `})},createPag=e=>{const s=Math.ceil(e.public_repos/30);for(pagContainer.innerHTML="",i=1;i<s+1;i++)pagContainer.innerHTML+=`<span class='pagination-element' data-val="${i}">${i}</span>`;const t=document.querySelectorAll(".git-checker__main-result-pagination span");t[0].classList.add("active"),t.forEach(e=>{e.addEventListener("click",()=>{t.forEach(e=>{e.classList.remove("active")}),e.classList.add("active"),searchRepo(findUserInp.value,e.dataset.val).then(e=>{createRepo(e)})})})},showData=()=>{searchUsers(findUserInp.value).then(e=>{createUser(e),createPag(e)}),searchRepo(findUserInp.value).then(e=>{createRepo(e)})};findUserBtn.addEventListener("click",()=>{showData()}),findUserInp.addEventListener("keypress",function(e){13===(e.which||e.keyCode)&&showData()});